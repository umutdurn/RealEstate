// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Model.Features", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Satılık"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Kiralık"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Günlük"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Eşyalı"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Eşyasız"
                        },
                        new
                        {
                            Id = 6,
                            Title = "1+0"
                        },
                        new
                        {
                            Id = 7,
                            Title = "1+1"
                        },
                        new
                        {
                            Id = 8,
                            Title = "2+1"
                        },
                        new
                        {
                            Id = 9,
                            Title = "3+1"
                        },
                        new
                        {
                            Id = 10,
                            Title = "3+2"
                        },
                        new
                        {
                            Id = 11,
                            Title = "4+2"
                        });
                });

            modelBuilder.Entity("Core.Model.RealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingYear")
                        .HasColumnType("integer");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("M2")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RealEstates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingYear = 2005,
                            Floor = 3,
                            Image = "https://picsum.photos/300/500",
                            M2 = 100,
                            Price = 10.0,
                            Title = "Avcılar Kiralık"
                        },
                        new
                        {
                            Id = 2,
                            BuildingYear = 2015,
                            Floor = 1,
                            Image = "https://picsum.photos/300/500",
                            M2 = 75,
                            Price = 15.0,
                            Title = "Berlikdüzü Kiralık"
                        },
                        new
                        {
                            Id = 3,
                            BuildingYear = 2022,
                            Floor = 10,
                            Image = "https://picsum.photos/300/500",
                            M2 = 150,
                            Price = 20.0,
                            Title = "Beşiktaş Kiralık"
                        },
                        new
                        {
                            Id = 4,
                            BuildingYear = 2022,
                            Floor = 2,
                            Image = "https://picsum.photos/300/500",
                            M2 = 70,
                            Price = 5.0,
                            Title = "Esenyurt Satılık"
                        },
                        new
                        {
                            Id = 5,
                            BuildingYear = 1999,
                            Floor = 1,
                            Image = "https://picsum.photos/300/500",
                            M2 = 90,
                            Price = 7.0,
                            Title = "Bağcılar Satılık"
                        });
                });

            modelBuilder.Entity("FeaturesRealEstate", b =>
                {
                    b.Property<int>("FeaturesId")
                        .HasColumnType("integer");

                    b.Property<int>("RealEstateId")
                        .HasColumnType("integer");

                    b.HasKey("FeaturesId", "RealEstateId");

                    b.HasIndex("RealEstateId");

                    b.ToTable("FeaturesRealEstate");

                    b.HasData(
                        new
                        {
                            FeaturesId = 1,
                            RealEstateId = 1
                        },
                        new
                        {
                            FeaturesId = 4,
                            RealEstateId = 1
                        },
                        new
                        {
                            FeaturesId = 6,
                            RealEstateId = 1
                        },
                        new
                        {
                            FeaturesId = 2,
                            RealEstateId = 2
                        },
                        new
                        {
                            FeaturesId = 5,
                            RealEstateId = 2
                        },
                        new
                        {
                            FeaturesId = 7,
                            RealEstateId = 2
                        },
                        new
                        {
                            FeaturesId = 1,
                            RealEstateId = 3
                        },
                        new
                        {
                            FeaturesId = 5,
                            RealEstateId = 3
                        },
                        new
                        {
                            FeaturesId = 9,
                            RealEstateId = 3
                        },
                        new
                        {
                            FeaturesId = 3,
                            RealEstateId = 4
                        },
                        new
                        {
                            FeaturesId = 4,
                            RealEstateId = 4
                        },
                        new
                        {
                            FeaturesId = 10,
                            RealEstateId = 4
                        },
                        new
                        {
                            FeaturesId = 2,
                            RealEstateId = 5
                        },
                        new
                        {
                            FeaturesId = 5,
                            RealEstateId = 5
                        },
                        new
                        {
                            FeaturesId = 8,
                            RealEstateId = 5
                        });
                });

            modelBuilder.Entity("FeaturesRealEstate", b =>
                {
                    b.HasOne("Core.Model.Features", null)
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Model.RealEstate", null)
                        .WithMany()
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
